#ifndef HANDLE_ALERT_H
#define HANDLE_ALERT_H

#include "np_led.h"

// Letra S
int LETRA_S[5][5][3] = {
    {{0, 0, 0}, {11, 17, 238}, {11, 17, 238}, {11, 17, 238}, {0, 0, 0}},
    {{0, 0, 0}, {11, 17, 238}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}},
    {{0, 0, 0}, {11, 17, 238}, {11, 17, 238}, {11, 17, 238}, {0, 0, 0}},
    {{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {11, 17, 238}, {0, 0, 0}},
    {{0, 0, 0}, {11, 17, 238}, {11, 17, 238}, {11, 17, 238}, {0, 0, 0}}};

// Letra O
int LETRA_O[5][5][3] = {
    {{0, 0, 0}, {11, 17, 238}, {11, 17, 238}, {11, 17, 238}, {0, 0, 0}},
    {{0, 0, 0}, {11, 17, 238}, {0, 0, 0}, {11, 17, 238}, {0, 0, 0}},
    {{0, 0, 0}, {11, 17, 238}, {0, 0, 0}, {11, 17, 238}, {0, 0, 0}},
    {{0, 0, 0}, {11, 17, 238}, {0, 0, 0}, {11, 17, 238}, {0, 0, 0}},
    {{0, 0, 0}, {11, 17, 238}, {11, 17, 238}, {11, 17, 238}, {0, 0, 0}}};

int SORRISO_NORMAL[5][5][3] = {
    {{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}},
    {{0, 0, 0}, {0, 255, 0}, {0, 0, 0}, {0, 255, 0}, {0, 0, 0}},
    {{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}},
    {{0, 255, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 255, 0}},
    {{0, 0, 0}, {0, 255, 0}, {0, 255, 0}, {0, 255, 0}, {0, 0, 0}}};

void handle_alert(int state)
{
    npClear();

    if (state == -1)
    {
        // Estado NORMAL (mostra sorriso verde)
        updateMatrix(SORRISO_NORMAL);
    }
    else
    {
        // Sequência: S - Espaço - O - Espaço - S
        switch (state)
        {
        case 0:
            updateMatrix(LETRA_S); // Primeiro S
            break;
        case 1:
            npClear();
            npWrite();
            break;
        case 2:
            updateMatrix(LETRA_O); // O
            break;
        case 3:
            npClear();
            npWrite();
            break;
        }
    }
}

#endif